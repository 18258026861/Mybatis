<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.IBlogDao">

<insert id="addBlog" parameterType="Blog">
    insert into blog(id, title, author, creat_time, views)
    VALUES(#{id},#{title},#{author},#{creatTime},#{views})
</insert>
<!--if-->
    <select id="findBlog1" resultType="Blog" parameterType="map">
        select * from blog
        <where>
        <include refid="if-title-author"></include>
        </where>
    </select>


<!--    choose从上往下选择，如果有一个满足就直接执行，如果都没有就执行otherwish-->
    <select id="findBlog2" resultType="Blog" parameterType="map">
        select * from blog
        <where>
        <choose>
            <when test="author != null">
                and author = #{author}
            </when>
            <when test="title != null">
                and title = #{title}
            </when>
            <otherwise>
                and views > 6000
            </otherwise>

        </choose>
        </where>
    </select>
<!--set-->
    <update id="updateBlog1" parameterType="map">
        update blog
            <set>
--             使用sql片段，提高复用
            <include refid="if-title-author"></include>
            </set>
            where title = #{title}
    </update>


    <sql id="if-title-author">
        <if test="author != null">
            author = #{author}
        </if>
        <if test="views != null">
            views = #{views}
        </if>
    </sql>

    <select id="findBlogByForeach" parameterType="map" resultType="Blog">
        select * from blog
<!--         collection为读取集合的名称，item 是本次迭代获取到的元素，index 是当前迭代的序号
        当使用 Map 对象（或者 Map.Entry 对象的集合）时，index 是键，item 是值
         open为拼接开头语句，close拼接结尾语句，separator为品鉴元素之间的字符-->
        <where>
        <foreach collection="titles" item="title" open="and (" close=")" separator="or">
                title = #{title}
        </foreach>
        </where>
    </select>


</mapper>
